{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Result.js","components/Notification.js","services/phoneNumber.js","App.js","index.js"],"names":["Filter","props","onChange","searchOnChange","PersonForm","onSubmit","handleSubmit","value","newName","nameHandleOnChange","newPhone","phoneHandleOnChange","type","Persons","persons","map","person","name","number","onClick","remove","id","Result","filtered","Notification","message","styles","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","baseUrl","axios","get","newObject","post","put","delete","data","then","response","App","useState","setNewName","setNewPhone","search","setSearch","setPersons","setMessage","setColor","useEffect","phoneService","res","catch","err","console","log","length","filter","toLowerCase","indexOf","event","target","preventDefault","window","confirm","contact","find","changeContact","setTimeout","phoneNumberObject","Math","random","concat","confirmation","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec62d999.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Filter(props) {\n  return (\n    <div>\n      filter shown with <input onChange={props.searchOnChange} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function PersonForm(props) {\n  return (\n    <div>\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          name:\n          <input value={props.newName} onChange={props.nameHandleOnChange} />\n        </div>\n        <div>\n          phone:\n          <input value={props.newPhone} onChange={props.phoneHandleOnChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Persons(props) {\n  return (\n    <>\n      {props.persons.map((person) => (\n        <div key={person.number}>\n          <p>\n            {person.name} {person.number}\n          </p>\n          <button onClick={props.remove} value={person.name} id={person.id}>\n            delete\n          </button>\n        </div>\n      ))}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Result(props) {\n  return (\n    <div>\n      {props.filtered.map((person) => (\n        <p key={person.name}>\n          {person.name} {person.number}\n        </p>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst Notification = ({ message, color }) => {\n  const styles = {\n    color: color,\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  };\n\n  if (message === null) {\n    return null;\n  }\n\n  return <div style={styles}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst del = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`, { data: id });\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  del\n};\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Result from \"./components/Result\";\nimport Notification from \"./components/Notification\";\nimport phoneService from \"./services/phoneNumber\";\n\nexport default function App() {\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [persons, setPersons] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n\n  // get all data\n  useEffect(() => {\n    phoneService\n      .getAll()\n      .then((res) => {\n        setPersons(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // search function\n  const filtered = search.length\n    ? persons.filter((person) => {\n        return person.name.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n      })\n    : [];\n\n  const searchOnChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const nameHandleOnChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const phoneHandleOnChange = (event) => {\n    setNewPhone(event.target.value);\n  };\n\n  // add new contact\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (persons.map((person) => person.name).indexOf(newName) >= 0) {\n      window.confirm(\n        newName +\n          \" is already added to phonebook, replace the old number with a new one?\"\n      );\n      const contact = persons.find((person) => person.name === newName);\n      const changeContact = { ...contact, number: newPhone };\n      phoneService\n        .update(contact.id, changeContact)\n        .then((response) => {\n          console.log(response);\n          setPersons(\n            persons.map((person) =>\n              person.id !== contact.id ? person : response.data\n            )\n          );\n          setMessage(\"Changed \" + contact.name);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setColor(\"green\");\n        })\n        .catch((err) => {\n          setMessage(\n            \"Information of \" + newName + \" has already removed from the server\"\n          );\n          setColor(\"red\");\n        });\n    } else {\n      const phoneNumberObject = {\n        name: newName,\n        number: newPhone,\n        id: Math.random() * 10\n      };\n      phoneService.create(phoneNumberObject).then((res) => {\n        setPersons(persons.concat(res.data));\n        setMessage(\"Add \" + newName);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        setColor(\"green\");\n      });\n    }\n  };\n\n  // delete a contact\n  const remove = (event) => {\n    var confirmation = window.confirm(`Delete ${event.target.value}?`);\n    console.log(event.target);\n    if (confirmation === true) {\n      phoneService\n        .del(event.target.id)\n        .then((res) => console.log(res))\n        .catch((err) => {\n          alert(`Delete ${event.target.value}?`);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {message !== \"\" ? (\n        <Notification color={color} message={message}></Notification>\n      ) : (\n        <></>\n      )}\n\n      <Filter searchOnChange={searchOnChange}></Filter>\n      {filtered.length === persons.length ? (\n        <></>\n      ) : (\n        <Result filtered={filtered}></Result>\n      )}\n      <h3>Add a new</h3>\n      <PersonForm\n        newName={newName}\n        newPhone={newPhone}\n        handleSubmit={handleSubmit}\n        nameHandleOnChange={nameHandleOnChange}\n        phoneHandleOnChange={phoneHandleOnChange}\n      ></PersonForm>\n      <h3>Numbers</h3>\n      <Persons remove={remove} persons={persons}></Persons>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}